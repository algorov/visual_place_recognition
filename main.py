#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import uvicorn
from app.utils.env_patch import apply_openmp_patch
from app.iface.server import VPEServer
from app.usecase.loader.scene_loader import load_scene_dataset, load_scene_metadata


def load_entries():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏.

    :return: List[Dict[str, Any]] ‚Äî –∑–∞–ø–∏—Å–∏ —Å –ø—É—Ç—è–º–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏.
    """
    try:
        metadata = load_scene_metadata('data/scenes_metadata.csv')
        print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å—Ü–µ–Ω: {len(metadata)}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å—Ü–µ–Ω: {e}")
        metadata = {}

    try:
        entries = load_scene_dataset('data/scenes/', metadata)
        print(f"üñº –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(entries)}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å—Ü–µ–Ω: {e}")
        entries = []

    return entries


# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å OpenMP (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è PyTorch + faiss)
apply_openmp_patch()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app = VPEServer(load_entries()).get_app()

if __name__ == '__main__':
    uvicorn.run(app, host="0.0.0.0", port=8000)
